the browser execution context is Window
node execution context

javascript execution context
1. global execution context

2. function execution context

3. eval execution context

phases of js execution:

1. memory creation phase/ creation phase (memory allocation of variables)

2. execution phase
--------------------------------------------------------------------------

let val1 = 10
let val2 = 5
function addnum(num1, num2){
	let total = num1 + num2
	return total
}
let result1 = addnum(val1, val2)
let result2 = addnum(9,3)

let us discuss the above js file execution process:

step 1. global execution -> this

step 2. memory phase
	val1 -> undefined
	val2 -> undefined
	addnum -> defination
	result1 -> undefined
	result2 -> undefined
	
step 3. execution phase
	val1 <- 10
	val2 <- 5
	addnum -> new executional context (new variable environment + execution thread)
	
	step 3.1
		on every function call a sandbox is created which will include a memory phase and an execution phase
	
		memory phase for the function call
			val1 -> undefined
			val2 -> undefined
			total -> undefined
		
		execution phase for the function call
			num1 <- 10
			num2 <- 5
			total -> 15
			total returns to global executional context that is in step 1
	
		after the function execution context is over, it is deleted
	
	now the control returns to execution phase (step 3) 
	result1 = 15